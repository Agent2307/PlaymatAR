  .hotspot{
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 10px;
    border: none;
    background-color: blue;
    box-sizing: border-box;
    pointer-events: none;
  }

  .hotspot[slot="hotspot-hand"]{
    --min-hotspot-opacity: 0;
    background-color: red;
  }

  .hotspot[slot="hotspot-foot"]:not([data-visible]) {
    background-color: transparent;
    border: 3px solid blue;
  }

  .annotation{
    background-color: #888888;
    position: absolute;
    transform: translate(10px, 10px);
    border-radius: 10px;
    padding: 10px;
  }
  /* This keeps child nodes hidden while the element loads */
  :not(:defined) > * {
    display: none;
  }
model-viewer{
		height:500px;
		width:50%;
		}
iframe{
		height:700px;
		width:90%;
        overflow: hidden;
        
    }
  :root {
    --expandable-section-background: #2b2d30;
    --expandable-section-text: #EEEEEE;
    --text-on-expandable-background: #F5F5F5;
    --number-input-background: #212121;
  }

  body {
    margin: 0
  }

  .app {
    display: flex;
    flex-direction: column;
    height: 100vh;
  }
    .ar {
      height: 100px;
      width: 50%;
      background-color: powderblue;
    }
        
  .header {
    align-items: center;
    display: flex;
    flex: 0 0 auto;
    height: 48px;
    justify-content: space-between;
    padding: 0 12px;
  }

  /* Container for renderer (left) and tabs (right). */
  .editor-body-root {
    display: flex;
    flex: auto; /* Grows to fill space under header */
    height: 0;
  }

  .mvContainer {
    align-items: stretch;
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    width: 100%;
  }

  model-viewer-preview {
    height: 100%;
  }

  me-tabs {
    background-color: #202124;  /* GOOGLE_GREY_900 */
    padding: 0;
    width: 360px;
    min-width: 360px;
    max-width: 360px;
  }

  me-tabs a {
    color: #dadcff; /* GOOGLE_GREY_300, but.. bluer */
  }

  me-tabbed-panel {
    max-height: calc(100vh - 105px);
    overflow-y: auto;
    display: block;
  }
  .privacy {
    color:#BDBDBD;
    padding: 5px 16px;
    position: absolute;
    bottom: 0;
    font-size: small;
    z-index: 0;
    background-color: rgba(32, 33, 36, .75);
  }
  @media only screen and (max-height: 600px) {
    .privacy {
      z-index: -1;
    }
  }
  .privacy-link {
    color: #BDBDBD;
  }

  /* This keeps child nodes hidden while the element loads */
  :not(:defined) > * {
    display: none;
  }

  model-viewer {
    background-color: #eee;
    overflow-x: hidden;
  }

  #ar-button {
    background-image: url(../../assets/ic_view_in_ar_new_googblue_48dp.png);
    background-repeat: no-repeat;
    background-size: 20px 20px;
    background-position: 12px 50%;
    background-color: #fff;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    bottom: 132px;
    padding: 0px 16px 0px 40px;
    font-family: Roboto Regular, Helvetica Neue, sans-serif;
    font-size: 14px;
    color:#4285f4;
    height: 36px;
    line-height: 36px;
    border-radius: 18px;
    border: 1px solid #DADCE0;
  }

  #ar-button:active {
    background-color: #E8EAED;
  }

  #ar-button:focus {
    outline: none;
  }

  #ar-button:focus-visible {
    outline: 1px solid #4285f4;
  }

  @keyframes circle {
    from { transform: translateX(-50%) rotate(0deg) translateX(50px) rotate(0deg); }
    to   { transform: translateX(-50%) rotate(360deg) translateX(50px) rotate(-360deg); }
  }

  @keyframes elongate {
    from { transform: translateX(100px); }
    to   { transform: translateX(-100px); }
  }

  model-viewer > #ar-prompt {
    position: absolute;
    left: 50%;
    bottom: 175px;
    animation: elongate 2s infinite ease-in-out alternate;
    display: none;
  }

  model-viewer[ar-status="session-started"] > #ar-prompt {
    display: block;
  }

  model-viewer > #ar-prompt > img {
    animation: circle 4s linear infinite;
      
  }
img{
    border-radius: 25px;
}
  model-viewer > #ar-failure {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 175px;
    display: none;
  }

  model-viewer[ar-tracking="not-tracking"] > #ar-failure {
    display: block;
  }

  .slider {
    width: 100%;
    text-align: center;
    overflow: hidden;
    position: absolute;
    bottom: 16px;
  }

  .slides {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }

  .slide {
    scroll-snap-align: start;
    flex-shrink: 0;
    width: 100px;
    height: 100px;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    background-color: #fff;
    margin-right: 10px;
    border-radius: 10px;
    border: none;
    display: flex;
  }

  .slide.selected {
    border: 2px solid #4285f4;
  }

  .slide:focus {
    outline: none;
  }

  .slide:focus-visible {
    outline: 1px solid #4285f4;
  }

/*--quiz css--*/
button{
    background: white;
}
.timer
{
    width: 7.5em;
    height: 5px;
}

  .quizbody {
    height: 50vh;
    background: orange;
  }
  * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
  }
  
  .start-screen,
  .score-container {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  button {
    border: none;
    outline: none;
    cursor: pointer;
  }
  #start-button,
  #restart {
    font-size: 1.3em;
    padding: 0.5em 1.8em;
    border-radius: 0.2em;
    box-shadow: 0 20px 30px rgba(0, 0, 0, 0.4);
  }
  #restart {
    margin-top: 0.9em;
  }
  #display-container {
    background-color: #ffffff;
    padding: 3.1em 1.8em;
    width: 100%;
    margin: 0 auto;
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
    border-radius: 0.6em;
  }
  .header {
    margin-bottom: 1.8em;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-bottom: 0.6em;
    border-bottom: 0.1em solid #c0bfd2;
  }
  .timer-div {
    background-color: #e1f5fe;
    width: 7.5em;
    border-radius: 1.8em;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.7em 1.8em;
  }
  .question {
    margin-bottom: 1.25em;
    font-weight: 600;
  }
  .option-div {
    font-size: 0.9em;
    width: 100%;
    padding: 1em;
    margin: 0.3em 0;
    text-align: left;
    outline: none;
    background: transparent;
    border: 1px solid #c0bfd2;
    border-radius: 0.3em;
  }
  .option-div:disabled {
    color: #000000;
    cursor: not-allowed;
  }
  #next-button {
    font-size: 1em;
    margin-top: 1.5em;
    background-color: #8754ff;
    color: #ffffff;
    padding: 0.7em 1.8em;
    border-radius: 0.3em;
    float: right;
    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.3);
  }
  .hide {
    display: none;
  }
  .incorrect {
    background-color: #ffdde0;
    color: #d32f2f;
    border-color: #d32f2f;
  }
  .correct {
    background-color: #e7f6d5;
    color: #689f38;
    border-color: #689f38;
  }
  #user-score {
    font-size: 1.5em;
    color: #ffffff;
  }

/* For dimension*/
#controls {
    position: absolute;
    bottom: 16px;
    left: 16px;
    max-width: unset;
    transform: unset;
    pointer-events: auto;
  }

  .dot{
    display: block;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: none;
    box-sizing: border-box;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
    background: #fff;
    pointer-events: none;
    --min-hotspot-opacity: 0;
  }

  .dim{
    background: #fff;
    border-radius: 4px;
    border: none;
    box-sizing: border-box;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
    color: rgba(0, 0, 0, 0.8);
    display: block;
    font-family: Futura, Helvetica Neue, sans-serif;
    font-size: 18px;
    font-weight: 700;
    max-width: 128px;
    overflow-wrap: break-word;
    padding: 0.5em 1em;
    position: absolute;
    width: max-content;
    height: max-content;
    transform: translate3d(-50%, -50%, 0);
    pointer-events: none;
    --min-hotspot-opacity: 0;
  }

  .dimensionLineContainer{
    pointer-events: none;
    position: fixed;
    display: block;
    width: 100%;
    height: 100%; 
  }

  .dimensionLine{
    stroke: #16a5e6;
    stroke-width: 2;
    stroke-dasharray: 2
  }

  .show{
    --min-hotspot-opacity: 1;
  }

  /* This keeps child nodes hidden while the element loads */
  :not(:defined) > * {
    display: none;
  }